// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$comments-name: 'comments';
$comments-x: 26px;
$comments-y: 52px;
$comments-offset-x: -26px;
$comments-offset-y: -52px;
$comments-width: 10px;
$comments-height: 9px;
$comments-total-width: 98px;
$comments-total-height: 78px;
$comments-image: 'img/sprite-media.png';
$comments: (26px, 52px, -26px, -52px, 10px, 9px, 98px, 78px, 'img/sprite-media.png', 'comments', );
$fb-name: 'fb';
$fb-x: 0px;
$fb-y: 26px;
$fb-offset-x: 0px;
$fb-offset-y: -26px;
$fb-width: 26px;
$fb-height: 26px;
$fb-total-width: 98px;
$fb-total-height: 78px;
$fb-image: 'img/sprite-media.png';
$fb: (0px, 26px, 0px, -26px, 26px, 26px, 98px, 78px, 'img/sprite-media.png', 'fb', );
$ggl-name: 'ggl';
$ggl-x: 26px;
$ggl-y: 26px;
$ggl-offset-x: -26px;
$ggl-offset-y: -26px;
$ggl-width: 26px;
$ggl-height: 26px;
$ggl-total-width: 98px;
$ggl-total-height: 78px;
$ggl-image: 'img/sprite-media.png';
$ggl: (26px, 26px, -26px, -26px, 26px, 26px, 98px, 78px, 'img/sprite-media.png', 'ggl', );
$mail-name: 'mail';
$mail-x: 36px;
$mail-y: 0px;
$mail-offset-x: -36px;
$mail-offset-y: 0px;
$mail-width: 36px;
$mail-height: 25px;
$mail-total-width: 98px;
$mail-total-height: 78px;
$mail-image: 'img/sprite-media.png';
$mail: (36px, 0px, -36px, 0px, 36px, 25px, 98px, 78px, 'img/sprite-media.png', 'mail', );
$search-name: 'search';
$search-x: 52px;
$search-y: 26px;
$search-offset-x: -52px;
$search-offset-y: -26px;
$search-width: 14px;
$search-height: 14px;
$search-total-width: 98px;
$search-total-height: 78px;
$search-image: 'img/sprite-media.png';
$search: (52px, 26px, -52px, -26px, 14px, 14px, 98px, 78px, 'img/sprite-media.png', 'search', );
$tm-name: 'tm';
$tm-x: 72px;
$tm-y: 0px;
$tm-offset-x: -72px;
$tm-offset-y: 0px;
$tm-width: 26px;
$tm-height: 26px;
$tm-total-width: 98px;
$tm-total-height: 78px;
$tm-image: 'img/sprite-media.png';
$tm: (72px, 0px, -72px, 0px, 26px, 26px, 98px, 78px, 'img/sprite-media.png', 'tm', );
$tw-name: 'tw';
$tw-x: 72px;
$tw-y: 26px;
$tw-offset-x: -72px;
$tw-offset-y: -26px;
$tw-width: 26px;
$tw-height: 26px;
$tw-total-width: 98px;
$tw-total-height: 78px;
$tw-image: 'img/sprite-media.png';
$tw: (72px, 26px, -72px, -26px, 26px, 26px, 98px, 78px, 'img/sprite-media.png', 'tw', );
$views-name: 'views';
$views-x: 52px;
$views-y: 40px;
$views-offset-x: -52px;
$views-offset-y: -40px;
$views-width: 13px;
$views-height: 9px;
$views-total-width: 98px;
$views-total-height: 78px;
$views-image: 'img/sprite-media.png';
$views: (52px, 40px, -52px, -40px, 13px, 9px, 98px, 78px, 'img/sprite-media.png', 'views', );
$vk-name: 'vk';
$vk-x: 0px;
$vk-y: 52px;
$vk-offset-x: 0px;
$vk-offset-y: -52px;
$vk-width: 26px;
$vk-height: 26px;
$vk-total-width: 98px;
$vk-total-height: 78px;
$vk-image: 'img/sprite-media.png';
$vk: (0px, 52px, 0px, -52px, 26px, 26px, 98px, 78px, 'img/sprite-media.png', 'vk', );
$yt-name: 'yt';
$yt-x: 0px;
$yt-y: 0px;
$yt-offset-x: 0px;
$yt-offset-y: 0px;
$yt-width: 36px;
$yt-height: 26px;
$yt-total-width: 98px;
$yt-total-height: 78px;
$yt-image: 'img/sprite-media.png';
$yt: (0px, 0px, 0px, 0px, 36px, 26px, 98px, 78px, 'img/sprite-media.png', 'yt', );
$spritesheet-width: 98px;
$spritesheet-height: 78px;
$spritesheet-image: 'img/sprite-media.png';
$spritesheet-sprites: ($comments, $fb, $ggl, $mail, $search, $tm, $tw, $views, $vk, $yt, );
$spritesheet: (98px, 78px, 'img/sprite-media.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
